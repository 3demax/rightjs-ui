Welcome!
========

Right Sortable is a standard sortable feature for RightJS

NOTE: it uses the RightJS Drag'n'Drop feature out of RightJS Goods


Features
========

  * RESTful design friendly
  * Tiny size
  * Automatic horizontal/vertical directions check
  * Auto-discovery feature


Usage
=====

  new Sortable('my-list', {...});
  $('my-list').makeSortable({...});


Options
=======

  * direction - 'auto'     - 'auto', 'vertical', 'horizontal', 'x', 'y'
  * tags      - 'li'       - the list items tag name
  * url       - null       - the Xhr requests url address, might contain the '%{id}' placeholder
  * method    - 'put'      - the Xhr requests method
  * Xhr       - {}         - additional Xhr options
  * idParam   - 'id'       - the url id value name
  * posParam  - 'position' - the url position value name
  * parseId   - true       - if the id attribute should be converted into an integer before sending
  * relName   - 'sortable' - the auto-discovery feature key


Events
======

There is only one event called 'update', the callback will receive the moved element and its new position

  new Sortable('my-list').onUpdate(function(elemnet, position) {....});


Urls And Remote Calls Processing
================================

Everything is pretty much straight forward, you can define the url and method with the options
plus you might specify some additional Xhr params, like spinners, etc. at the 'Xhr' option.

Plus this sortable supports the '%{id}' placeholder in the urls so you might specify RESTful
friendly url addresses like that

new Sortable('boo', {
  url: 'todos/%{id}.js'
});

After that the sortable will try to get an ID out of the moved element, optionally parse an integer
number out of it and replace the place holder with the ID, so it will hit addresses like that

/todos/1.js
/todos/2.js
.....



